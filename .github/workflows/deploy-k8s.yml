name: Deploy to Kubernetes

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy:
    name: Build and Deploy to Kubernetes
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix={{branch}}-
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure kubectl
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > $HOME/.kube/config

      - name: Create namespace
        run: |
          kubectl apply -f deploy/k8s/base/namespace.yaml

      - name: Create/update secrets
        run: |
          kubectl create secret generic probotsharp-secrets \
            --namespace=probotsharp \
            --from-literal=database-connection-string="${{ secrets.DATABASE_CONNECTION_STRING }}" \
            --from-literal=github-app-id="${{ secrets.GITHUB_APP_ID }}" \
            --from-literal=github-webhook-secret="${{ secrets.GITHUB_WEBHOOK_SECRET }}" \
            --from-literal=github-private-key="${{ secrets.GITHUB_PRIVATE_KEY }}" \
            --from-literal=redis-connection-string="${{ secrets.REDIS_CONNECTION_STRING }}" \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Apply configuration
        run: |
          kubectl apply -f deploy/k8s/base/configmap.yaml

      - name: Deploy application
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Update deployment with new image
          kubectl set image deployment/probotsharp \
            probotsharp=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG} \
            --namespace=probotsharp --record || \
          kubectl apply -f deploy/k8s/base/deployment.yaml

      - name: Apply service and ingress
        run: |
          kubectl apply -f deploy/k8s/base/service.yaml
          kubectl apply -f deploy/k8s/ingress.yaml

      - name: Apply HPA
        run: |
          kubectl apply -f deploy/k8s/hpa.yaml

      - name: Wait for rollout
        run: |
          kubectl rollout status deployment/probotsharp --namespace=probotsharp --timeout=5m

      - name: Verify deployment
        run: |
          kubectl get pods -l app.kubernetes.io/name=probotsharp --namespace=probotsharp
          kubectl get services --namespace=probotsharp
          kubectl get ingress --namespace=probotsharp
