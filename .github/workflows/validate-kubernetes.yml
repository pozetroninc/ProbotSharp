name: Validate Kubernetes

on:
  pull_request:
    paths:
      - 'deploy/k8s/**'
      - '.github/workflows/validate-kubernetes.yml'
  push:
    branches:
      - main
    paths:
      - 'deploy/k8s/**'
      - '.github/workflows/validate-kubernetes.yml'

jobs:
  validate-manifests:
    name: Validate Plain Manifests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate configuration consistency
        run: ./scripts/validate-k8s-config.sh

      - name: Setup Kubeconform
        uses: bmuschko/setup-kubeconform@v1

      - name: Validate manifests with kubeconform
        run: kubeconform -schema-location 'tools/kubeconform/schemas/{{ .NormalizedKubernetesVersion }}-standalone{{ .StrictSuffix }}/{{ .ResourceKind }}{{ .KindSuffix }}.json' -strict -summary -skip Kustomization deploy/k8s/base/*.yaml deploy/k8s/*.yaml

  validate-helm:
    name: Validate Helm Chart
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: 'v3.14.0'

      - name: Setup Kubeconform
        uses: bmuschko/setup-kubeconform@v1

      - name: Lint Helm chart
        run: helm lint deploy/k8s/helm --values deploy/k8s/helm/values.yaml --strict

      - name: Validate Helm templates with kubeconform
        run: helm template probotsharp deploy/k8s/helm --values deploy/k8s/helm/test-values.yaml | kubeconform -schema-location 'tools/kubeconform/schemas/{{ .NormalizedKubernetesVersion }}-standalone{{ .StrictSuffix }}/{{ .ResourceKind }}{{ .KindSuffix }}.json' -strict -summary -

  deploy-test-manifests:
    name: Deploy Test (Manifests)
    runs-on: ubuntu-latest
    needs: validate-manifests
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create kind cluster
        uses: helm/kind-action@v1
        with:
          cluster_name: probotsharp-test

      - name: Verify cluster
        run: kubectl cluster-info && kubectl get nodes

      - name: Create namespace
        run: kubectl apply -f deploy/k8s/base/namespace.yaml

      - name: Create test secrets
        run: |
          kubectl create secret generic probotsharp-secrets -n probotsharp \
            --from-literal=database-connection-string="Host=localhost;Database=test" \
            --from-literal=github-app-id="12345" \
            --from-literal=github-webhook-secret="test-secret" \
            --from-literal=github-private-key="test-key" \
            --from-literal=redis-connection-string="localhost:6379"

      - name: Deploy with test image
        run: |
          # Use Kustomize overlay to replace image with nginxinc/nginx-unprivileged:alpine for testing
          # This validates deployment structure without requiring the actual ProbotSharp image
          # nginx-unprivileged runs as non-root and matches production security constraints
          kubectl apply -k deploy/k8s/overlays/test/

      - name: Wait for deployment
        run: kubectl wait --for=condition=available --timeout=120s deployment/probotsharp -n probotsharp

      - name: Run smoke tests
        run: ./scripts/k8s-smoke-test.sh

      - name: Dump logs on failure
        if: failure()
        run: kubectl get all -n probotsharp && kubectl logs -n probotsharp -l app.kubernetes.io/name=probotsharp --tail=200

  deploy-test-helm:
    name: Deploy Test (Helm)
    runs-on: ubuntu-latest
    needs: validate-helm
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: 'v3.14.0'

      - name: Create kind cluster
        uses: helm/kind-action@v1
        with:
          cluster_name: probotsharp-helm-test

      - name: Install chart
        run: helm install probotsharp deploy/k8s/helm --namespace probotsharp --create-namespace --values deploy/k8s/helm/test-values.yaml --wait --timeout 3m

      - name: Verify
        run: helm status probotsharp -n probotsharp && kubectl get all -n probotsharp

      - name: Test upgrade
        run: helm upgrade probotsharp deploy/k8s/helm -n probotsharp --values deploy/k8s/helm/test-values.yaml --set replicaCount=2 --wait

      - name: Test rollback
        run: helm rollback probotsharp -n probotsharp --wait

      - name: Run smoke tests
        run: ./scripts/k8s-smoke-test.sh

      - name: Dump logs on failure
        if: failure()
        run: helm status probotsharp -n probotsharp && kubectl logs -n probotsharp -l app.kubernetes.io/name=probotsharp --tail=200
